# Customer Sentiment Watchdog

A dynamic, single-page web application that provides a dashboard for real-time customer sentiment analysis. This tool is built with HTML, Tailwind CSS, and vanilla JavaScript, featuring a live-updating interface to monitor mock data from various social platforms.

![image](https://user-images.githubusercontent.com/Sd8738/Sumant/Customer-Sentiment-Watchdog/assets/screenshot.png) ## ‚ú® Features

-   **Manual Sentiment Analysis**: Enter any text to get an instant sentiment classification.
-   **Real-Time Feeds**: Simulates live feeds from platforms like Twitter, Amazon, Reddit, etc., with continuously updating comments.
-   **Nuanced Emotion Detection**: The analysis goes beyond simple positive/negative to detect emotions like **Anger, Frustration, Disappointment, Excitement, Satisfaction,** and **Confusion**.
-   **Live Trend Chart**: A line chart powered by Chart.js visualizes the overall positive vs. negative sentiment trend over time.
-   **Instant Alerts**: Automatically flags and displays high-priority negative comments in a dedicated alerts section.
-   **Responsive Design**: A clean, responsive layout built with Tailwind CSS that works on both desktop and mobile.
-   **Fun "Comic Mode" Theme**: Features a playful `Comic Sans MS` font and a dynamic, animated gradient background.

## üõ†Ô∏è Technologies Used

-   **HTML5**: The structure of the web page.
-   **Tailwind CSS**: For all styling and layout.
-   **Vanilla JavaScript (ES6)**: For all interactivity, data simulation, and DOM manipulation.
-   **Chart.js**: For the sentiment trend graph.

## üöÄ How to Use

This project is a single file and requires no installation or build steps.

1.  **Download the Code**: Clone this repository or simply download the `index.html` file.
    ```bash
    git clone [https://github.com/Sd8738/Sumant/Customer-Sentiment-Watchdog.git](https://github.com/Sd8738/Sumant/Customer-Sentiment-Wtachdog.git)
    ```
2.  **Open in Browser**: Navigate to the project directory and open the `index.html` file in your favorite web browser (like Chrome, Firefox, or Edge).

That's it! The dashboard will start running with simulated data.

## üîß How It Works

The sentiment analysis is performed by a JavaScript function (`getSentiment`) that uses a keyword-matching approach.

-   The function contains lists of words associated with different emotions (e.g., 'terrible', 'awful' for Anger; 'amazing', 'fantastic' for Excitement).
-   It scans input text for these keywords to determine the most likely emotion.
-   The "real-time" feeds and chart are powered by mock data stored in a JavaScript object and are updated on a timer using `setInterval`.

This is a front-end simulation and does not connect to any live APIs.

## üé® Customization

You can easily customize this tool:

-   **Change Data Sources**: Modify the `mockComments` object in the `<script>` section to include your own sample data.
-   **Refine Sentiment Analysis**: Add or remove keywords from the `emotions` object within the `getSentiment` function to improve its accuracy or tailor it to a specific domain.
-   **Adjust the Look**: Since this uses Tailwind CSS, you can modify the class names in the HTML to change colors, spacing, and more.

## üìÑ License

This project is open-source and available under the [MIT License](LICENSE).
